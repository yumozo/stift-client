{
  "compilerOptions": {
    "target": "es6",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["dom", "esnext.asynciterable"],/* Specify a set of bundled library declaration files that describe the target runtime environment. */

    "module": "commonjs",                                /* Specify what module code is generated. */
    "baseUrl": "./tsSrc",   
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */

    "outDir": "./dest",                                   /* Specify an output folder for all emitted files. */
    "removeComments": false,                             /* Disable emitting comments. */

    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                            /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    "noUnusedLocals": false,                           /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": false,                       /* Raise an error when a function parameter isn't read. */
    "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */

    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "exclude": ["node_modules"],
  "include": ["src/**/*.{ts,tsx}"]
}
